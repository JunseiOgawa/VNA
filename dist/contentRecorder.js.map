{"version":3,"file":"contentRecorder.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://vna/./src/contentRecorder.ts"],"sourcesContent":["\"use strict\";\n// Content script for audio recording via getUserMedia\n// filepath: d:/programmstage/VNA/src/contentRecorder.ts\nlet mediaRecorder;\nlet audioChunks = [];\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    if (request.action === 'start-record') {\n        navigator.mediaDevices.getUserMedia({ audio: true })\n            .then(stream => {\n            mediaRecorder = new MediaRecorder(stream, { mimeType: 'audio/webm; codecs=opus' });\n            audioChunks = [];\n            mediaRecorder.ondataavailable = event => {\n                if (event.data.size > 0)\n                    audioChunks.push(event.data);\n            };\n            mediaRecorder.start();\n            sendResponse({ status: 'started' });\n        })\n            .catch(error => {\n            console.error('Content script start-record error:', error);\n            sendResponse({ status: 'error', error: error.message });\n        });\n        return true; // keep message channel open\n    }\n    if (request.action === 'stop-record') {\n        if (mediaRecorder && mediaRecorder.state !== 'inactive') {\n            mediaRecorder.onstop = () => {\n                const blob = new Blob(audioChunks, { type: 'audio/webm' });\n                // Release stream\n                (mediaRecorder.stream.getTracks() || []).forEach(t => t.stop());\n                // Send the recorded data to extension\n                chrome.runtime.sendMessage({ action: 'recording-data', blob: blob });\n                sendResponse({ status: 'stopped' });\n            };\n            mediaRecorder.stop();\n        }\n        else {\n            sendResponse({ status: 'error', error: 'Recorder not active' });\n        }\n        return true;\n    }\n});\n"],"names":[],"sourceRoot":""}